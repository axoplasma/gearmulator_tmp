name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version number (e.g. 1.4.0)"
        required: true

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, macos-13, windows-2019 ]
      fail-fast: true
    name:  ${{ matrix.os }} build
    steps:
    - name: Install Dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt update && sudo apt install -y libgl1-mesa-dev xorg-dev libasound2-dev

    - uses: actions/checkout@v4
      with:
        submodules: "recursive"

    - name: Set up MSVC compiler
      if: matrix.os == 'windows-2019'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel 3

    - name: Pack
      working-directory: ${{github.workspace}}/build
      run: cmake -P ${{github.workspace}}/scripts/pack.cmake

    - name: Create GitHub Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: Release ${{ github.event.inputs.version }}
        body_path: ${{github.workspace}}/doc/changelog.txt
        draft: true
        prerelease: false

    - name: Upload Release Assets to GitHub Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: build/*${{ github.event.inputs.version }}*.{zip,deb,rpm}
        asset_name: ${{ github.event.inputs.version }}-asset
        asset_content_type: application/octet-stream
